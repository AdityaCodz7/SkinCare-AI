{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:5000/api';// Create axios instance with base configuration\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle auth errors\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');localStorage.removeItem('user');window.location.href='/login';}return Promise.reject(error);});// Auth API calls\nexport const authAPI={signup:userData=>api.post('/auth/signup',userData),login:credentials=>api.post('/auth/login',credentials),getMe:()=>api.get('/auth/getMe'),updateMe:userData=>api.patch('/auth/updateMe',userData),updatePassword:passwordData=>api.patch('/auth/updateMyPassword',passwordData)};// Image API calls\nexport const imageAPI={uploadImage:formData=>api.post('/image/upload',formData,{headers:{'Content-Type':'multipart/form-data'}}),getMyImages:()=>api.get('/image/my-images')};// AI API calls\nexport const aiAPI={analyzeImage:imageId=>api.post(\"/ai/scan/\".concat(imageId))};// Scan Results API calls\nexport const scanResultsAPI={createScanResult:scanData=>api.post('/scans',scanData),getMyScanResults:()=>api.get('/scans/my-scans'),compareScanResults:scanIds=>api.post('/scans/compare-scans',scanIds)};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","signup","userData","post","login","credentials","getMe","get","updateMe","patch","updatePassword","passwordData","imageAPI","uploadImage","formData","getMyImages","aiAPI","analyzeImage","imageId","scanResultsAPI","createScanResult","scanData","getMyScanResults","compareScanResults","scanIds"],"sources":["D:/backend-practice/SkinCare project/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\n// Create axios instance with base configuration\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API calls\r\nexport const authAPI = {\r\n  signup: (userData) => api.post('/auth/signup', userData),\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  getMe: () => api.get('/auth/getMe'),\r\n  updateMe: (userData) => api.patch('/auth/updateMe', userData),\r\n  updatePassword: (passwordData) => api.patch('/auth/updateMyPassword', passwordData),\r\n};\r\n\r\n// Image API calls\r\nexport const imageAPI = {\r\n  uploadImage: (formData) => api.post('/image/upload', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  }),\r\n  getMyImages: () => api.get('/image/my-images'),\r\n};\r\n\r\n// AI API calls\r\nexport const aiAPI = {\r\n  analyzeImage: (imageId) => api.post(`/ai/scan/${imageId}`),\r\n};\r\n\r\n// Scan Results API calls\r\nexport const scanResultsAPI = {\r\n  createScanResult: (scanData) => api.post('/scans', scanData),\r\n  getMyScanResults: () => api.get('/scans/my-scans'),\r\n  compareScanResults: (scanIds) => api.post('/scans/compare-scans', scanIds),\r\n};\r\n\r\nexport default api;\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAG,2BAA2B,CAEhD;AACA,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,WAAAC,MAAA,CAAaJ,KAAK,CAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAM,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAb,GAAG,CAACI,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC1BU,QAAQ,EAAKA,QAAQ,CACrBH,KAAK,EAAK,KAAAI,eAAA,CACT,GAAI,EAAAA,eAAA,CAAAJ,KAAK,CAACG,QAAQ,UAAAC,eAAA,iBAAdA,eAAA,CAAgBC,MAAM,IAAK,GAAG,CAAE,CAClCT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC,CAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC,CAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACjC,CACA,MAAO,CAAAR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,OAAO,CAAG,CACrBC,MAAM,CAAGC,QAAQ,EAAKzB,GAAG,CAAC0B,IAAI,CAAC,cAAc,CAAED,QAAQ,CAAC,CACxDE,KAAK,CAAGC,WAAW,EAAK5B,GAAG,CAAC0B,IAAI,CAAC,aAAa,CAAEE,WAAW,CAAC,CAC5DC,KAAK,CAAEA,CAAA,GAAM7B,GAAG,CAAC8B,GAAG,CAAC,aAAa,CAAC,CACnCC,QAAQ,CAAGN,QAAQ,EAAKzB,GAAG,CAACgC,KAAK,CAAC,gBAAgB,CAAEP,QAAQ,CAAC,CAC7DQ,cAAc,CAAGC,YAAY,EAAKlC,GAAG,CAACgC,KAAK,CAAC,wBAAwB,CAAEE,YAAY,CACpF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,QAAQ,CAAG,CACtBC,WAAW,CAAGC,QAAQ,EAAKrC,GAAG,CAAC0B,IAAI,CAAC,eAAe,CAAEW,QAAQ,CAAE,CAC7DlC,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACFmC,WAAW,CAAEA,CAAA,GAAMtC,GAAG,CAAC8B,GAAG,CAAC,kBAAkB,CAC/C,CAAC,CAED;AACA,MAAO,MAAM,CAAAS,KAAK,CAAG,CACnBC,YAAY,CAAGC,OAAO,EAAKzC,GAAG,CAAC0B,IAAI,aAAAd,MAAA,CAAa6B,OAAO,CAAE,CAC3D,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,cAAc,CAAG,CAC5BC,gBAAgB,CAAGC,QAAQ,EAAK5C,GAAG,CAAC0B,IAAI,CAAC,QAAQ,CAAEkB,QAAQ,CAAC,CAC5DC,gBAAgB,CAAEA,CAAA,GAAM7C,GAAG,CAAC8B,GAAG,CAAC,iBAAiB,CAAC,CAClDgB,kBAAkB,CAAGC,OAAO,EAAK/C,GAAG,CAAC0B,IAAI,CAAC,sBAAsB,CAAEqB,OAAO,CAC3E,CAAC,CAED,cAAe,CAAA/C,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}